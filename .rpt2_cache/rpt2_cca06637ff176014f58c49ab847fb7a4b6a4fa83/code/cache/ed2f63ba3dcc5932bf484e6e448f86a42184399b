{"code":"import * as React from \"react\";\r\n// fix this\r\nimport { connect } from \"@digitaloptgroup/cms/dist/es\";\r\nimport { Context } from \"./Context\";\r\nconsole.log(\"TS VERSION!\");\r\nconst appConfig = (typeof window !== \"undefined\" && window.__APP_CONFIG__) || {};\r\nexport class AbTesting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const projectId = this.props.projectId || appConfig.projectId;\r\n        if (projectId === undefined) {\r\n            throw Error(\"projectId must be passed as a prop to the @digitaloptgroup/cms-react provider: <AbTesting projectId={undefined} />\");\r\n        }\r\n        const cmsConfig = {\r\n            apiUrl: `https://api-${projectId}.edgeyates.com`,\r\n            apiKey: appConfig.apiKey,\r\n            projectId,\r\n            rid: appConfig.rid,\r\n            vid: appConfig.vid,\r\n            startTimestamp: appConfig.startTimestamp\r\n        };\r\n        this.cms = connect({\r\n            apikey: this.props.apiKey || cmsConfig.apiKey,\r\n            apiUrl: this.props.apiUrl || cmsConfig.apiUrl,\r\n            vid: this.props.vid || cmsConfig.vid,\r\n            realtimeUrl: this.props.realtimeUrl,\r\n            ssrCache: this.props.ssrCache,\r\n            resolver: this.props.resolver\r\n        });\r\n        // only run this code in the browser\r\n        if (typeof window !== \"undefined\") {\r\n            const { initTracker } = require(\"@digitaloptgroup/analytics\");\r\n            console.log(\"init tracker\", initTracker);\r\n            this.trackers = initTracker({\r\n                rid: this.props.rid || cmsConfig.rid,\r\n                vid: this.props.vid || cmsConfig.vid,\r\n                projectId: this.props.projectId || cmsConfig.projectId,\r\n                startTimestamp: this.props.startTimestamp || cmsConfig.startTimestamp,\r\n                apiKey: this.props.apiKey || cmsConfig.apiKey\r\n            }, this.props.wsFqdn);\r\n            this.observer = this.trackers.initIntersectionObserver();\r\n        }\r\n    }\r\n    render() {\r\n        if (typeof window !== \"undefined\") {\r\n            const { trackers, observer } = this;\r\n            return (React.createElement(Context.Provider, { value: {\r\n                    cms: this.cms,\r\n                    pathChange: trackers.pathChange,\r\n                    outcome: trackers.outcome,\r\n                    caughtError: trackers.caughtError,\r\n                    observe: observer.observe,\r\n                    unobserve: observer.unobserve\r\n                } }, this.props.children));\r\n        }\r\n        else {\r\n            return (React.createElement(Context.Provider, { value: {\r\n                    cms: this.cms\r\n                } }, this.props.children));\r\n        }\r\n    }\r\n}\r\n","references":["/home/shalom/Documents/az/G/github/cms-react/node_modules/@types/react/index.d.ts","/home/shalom/Documents/az/G/github/cms-react/node_modules/@digitaloptgroup/cms/dist/es/index.js","/home/shalom/Documents/az/G/github/cms-react/src/Context.js","/home/shalom/Documents/az/G/github/cms-react/node_modules/@digitaloptgroup/analytics/dist/commonjs/index.js"],"dts":{"name":"/home/shalom/Documents/az/G/github/cms-react/AbTestAndTrackProvider.d.ts","writeByteOrderMark":false,"text":"import * as React from \"react\";\r\ninterface AppConfig {\r\n    rid?: string;\r\n    vid?: string;\r\n    projectId?: string;\r\n    apiKey?: string;\r\n    startTimestamp?: number;\r\n}\r\ndeclare global {\r\n    interface Window {\r\n        __APP_CONFIG__: AppConfig;\r\n    }\r\n}\r\ndeclare type Resolver = (options: {\r\n    userId: string;\r\n    queryName: string;\r\n    args: {\r\n        [key: string]: string;\r\n    };\r\n}) => void;\r\ndeclare type Props = AppConfig & {\r\n    apiUrl: string;\r\n    realtimeUrl: string;\r\n    ssrCache: {\r\n        [key: string]: any;\r\n    };\r\n    resolver: Resolver;\r\n    wsFqdn: string;\r\n};\r\nexport declare class AbTesting extends React.Component<Props> {\r\n    private cms;\r\n    private trackers?;\r\n    private observer?;\r\n    constructor(props: any);\r\n    render(): JSX.Element;\r\n}\r\nexport {};\r\n"}}
