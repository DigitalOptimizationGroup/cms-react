{"code":"import * as React from \"react\";\r\nimport { connect } from \"@digitaloptgroup/cms\";\r\nimport { Context } from \"./Context\";\r\n//import { initTracker } from \"@digitaloptgroup/analytics\";\r\nconst appConfig = (typeof window !== \"undefined\" && window.__APP_CONFIG__) || {};\r\nexport class AbTesting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const projectId = this.props.projectId || appConfig.projectId;\r\n        if (projectId === undefined) {\r\n            throw Error(\"projectId must be passed as a prop to the @digitaloptgroup/cms-react provider: <AbTesting projectId={undefined} />\");\r\n        }\r\n        const cmsConfig = {\r\n            apiUrl: `https://api-${projectId}.edgeyates.com`,\r\n            projectId,\r\n            rid: appConfig.rid,\r\n            vid: appConfig.vid,\r\n            startTimestamp: appConfig.startTimestamp\r\n        };\r\n        this.cms = connect({\r\n            apikey: this.props.apiKey || cmsConfig.apiKey,\r\n            apiUrl: this.props.apiUrl || cmsConfig.apiUrl,\r\n            vid: this.props.vid || cmsConfig.vid,\r\n            realtimeUrl: this.props.realtimeUrl,\r\n            ssrCache: this.props.ssrCache,\r\n            resolver: this.props.resolver\r\n        });\r\n        // only run this code in the browser\r\n        if (typeof window !== \"undefined\") {\r\n            const { initTracker } = require(\"@digitaloptgroup/analytics\");\r\n            console.log(\"init tracker\", initTracker);\r\n            const { pathChange, outcome, caughtError, initIntersectionObserver } = initTracker({\r\n                rid: this.props.rid || cmsConfig.rid,\r\n                vid: this.props.vid || cmsConfig.vid,\r\n                projectId: this.props.projectId || cmsConfig.projectId,\r\n                startTimestamp: this.props.startTimestamp || cmsConfig.startTimestamp,\r\n                apiKey: this.props.apiKey || cmsConfig.apiKey\r\n            }, this.props.wsFqdn);\r\n            const { observe, unobserve } = initIntersectionObserver();\r\n            this.pathChange = pathChange;\r\n            this.caughtError = caughtError;\r\n            this.outcome = outcome;\r\n            this.observe = observe;\r\n            this.unobserve = unobserve;\r\n        }\r\n    }\r\n    render() {\r\n        return (React.createElement(Context.Provider, { value: {\r\n                cms: this.cms,\r\n                pathChange: this.pathChange,\r\n                outcome: this.outcome,\r\n                caughtError: this.caughtError,\r\n                observe: this.observe,\r\n                unobserve: this.unobserve\r\n            } }, this.props.children));\r\n    }\r\n}\r\n","references":["/home/shalom/Documents/az/G/github/node_modules/react/index.js","/home/shalom/Documents/az/G/github/cms-react/node_modules/@digitaloptgroup/cms/dist/commonjs/index.js","/home/shalom/Documents/az/G/github/cms-react/src/Context.js"]}
